directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type Blog implements Node {
  id: ID!
  """ブログのタイトル"""
  title: String!
  """ブログのスラッグ、URLのパラメータとして使用"""
  slug: String!
  """ブログの説明"""
  description: String!
  """ブログの本文"""
  content: String!
  """ブログの作成日時"""
  createdAt: Time!
  """ブログの更新日時"""
  updatedAt: Time!
  """ブログの公開日時、公開されていない場合はnull"""
  publishedAt: Time
}
"""Ordering options for Blog connections"""
input BlogOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Blogs."""
  field: BlogOrderField!
}
"""Properties by which Blog connections can be ordered."""
enum BlogOrderField {
  TITLE
  SLUG
  DESCRIPTION
  CONTENT
  CREATED_AT
  UPDATED_AT
  PUBLISHED_AT
}
"""
CreateBlogInput is used for create Blog object.
Input was generated by ent.
"""
input CreateBlogInput {
  """ブログのタイトル"""
  title: String!
  """ブログのスラッグ、URLのパラメータとして使用"""
  slug: String!
  """ブログの説明"""
  description: String!
  """ブログの本文"""
  content: String!
  """ブログの作成日時"""
  createdAt: Time
  """ブログの更新日時"""
  updatedAt: Time
  """ブログの公開日時、公開されていない場合はnull"""
  publishedAt: Time
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/sor4chi/portfolio-blog/server/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  blogs: [Blog!]!
}
type Tag implements Node {
  id: ID!
  """タグの名前"""
  name: String!
  """タグのスラッグ、URLのパラメータとして使用"""
  slug: String!
}
"""Ordering options for Tag connections"""
input TagOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Tags."""
  field: TagOrderField!
}
"""Properties by which Tag connections can be ordered."""
enum TagOrderField {
  NAME
  SLUG
}
"""The builtin Time type"""
scalar Time
