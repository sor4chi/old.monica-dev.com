// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"
)

// CreateBlogInput represents a mutation input for creating blogs.
type CreateBlogInput struct {
	Title       string
	Slug        string
	Description string
	Content     string
	CreatedAt   *time.Time
	UpdatedAt   *time.Time
	PublishedAt *time.Time
	TagIDs      []int
}

// Mutate applies the CreateBlogInput on the BlogMutation builder.
func (i *CreateBlogInput) Mutate(m *BlogMutation) {
	m.SetTitle(i.Title)
	m.SetSlug(i.Slug)
	m.SetDescription(i.Description)
	m.SetContent(i.Content)
	if v := i.CreatedAt; v != nil {
		m.SetCreatedAt(*v)
	}
	if v := i.UpdatedAt; v != nil {
		m.SetUpdatedAt(*v)
	}
	if v := i.PublishedAt; v != nil {
		m.SetPublishedAt(*v)
	}
	if v := i.TagIDs; len(v) > 0 {
		m.AddTagIDs(v...)
	}
}

// SetInput applies the change-set in the CreateBlogInput on the BlogCreate builder.
func (c *BlogCreate) SetInput(i CreateBlogInput) *BlogCreate {
	i.Mutate(c.Mutation())
	return c
}

// CreateTagInput represents a mutation input for creating tags.
type CreateTagInput struct {
	Name    string
	Slug    string
	BlogIDs []int
}

// Mutate applies the CreateTagInput on the TagMutation builder.
func (i *CreateTagInput) Mutate(m *TagMutation) {
	m.SetName(i.Name)
	m.SetSlug(i.Slug)
	if v := i.BlogIDs; len(v) > 0 {
		m.AddBlogIDs(v...)
	}
}

// SetInput applies the change-set in the CreateTagInput on the TagCreate builder.
func (c *TagCreate) SetInput(i CreateTagInput) *TagCreate {
	i.Mutate(c.Mutation())
	return c
}
